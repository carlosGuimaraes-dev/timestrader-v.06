name: CI
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  lint-and-check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: ${{ github.head_ref || github.ref_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install "ruff>=0.5,<0.6" "black>=24.3,<25" "nbqa>=1.9,<2" "mypy>=1.10,<2"
      - name: Auto-fix with Ruff
        run: |
          ruff check --fix . || true
          nbqa ruff --fix . || true
      - name: Auto-format with Black
        run: |
          black .
          nbqa black .
      - name: Detect changes
        id: changes
        run: |
          if ! git diff --quiet; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
          status=$(git status --short || true)
          if printf '%s\n' "$status" | grep -E '^.. \\.github/workflows/' >/dev/null; then
            echo "workflow_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "workflow_changed=false" >> "$GITHUB_OUTPUT"
          fi
          if printf '%s\n' "$status" | grep -E -v '^.. \\.github/workflows/' | grep -q '[^[:space:]]'; then
            echo "non_workflow_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "non_workflow_changed=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Ruff (verify clean)
        run: |
          ruff check .
          nbqa ruff .
      - name: Black (verify clean)
        run: |
          black --check .
          nbqa black --check .
      - name: mypy (loose)
        run: |
          mypy --exclude 'datasets|.github|scripts' . || true
      - name: Notebook syntax check
        run: |
          python scripts/check_notebooks.py
